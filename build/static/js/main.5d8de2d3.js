(()=>{"use strict";const e=require("express"),n=e(),o=require("mongoose"),s=require("morgan"),r=require("path");require("dotenv").config();const t=require("cors"),i=require("./models/person"),d={NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}.PORT||3001,a={NODE_ENV:"production",PUBLIC_URL:"",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}.MONGODB_URI;o.connect(a,{useNewUrlParser:!0,useUnifiedTopology:!0}).then((()=>{console.log("Connected to MongoDB")})).catch((e=>{console.error("Error connecting to MongoDB:",e.message)})),n.use(t()),n.use(e.json()),n.use(s("tiny")),n.use(e.static(r.join(__dirname,"build"))),s.token("req-body",(e=>"POST"===e.method?JSON.stringify(e.body):"")),n.use(s(":method :url :status :res[content-length] - :response-time ms :req-body")),n.get("/api/persons",((e,n,o)=>{i.find({}).then((e=>{e?n.json(e):n.status(404).end()})).catch((e=>o(e)))})),n.post("/api/persons",((e,n,o)=>{const s=e.body;if(void 0===s.name)return n.status(400).json({error:"name missing"});new i({name:s.name,number:s.number}).save().then((e=>{n.json(e)})).catch((e=>o(e)))})),n.delete("/api/persons/:id",((e,n,o)=>{i.findByIdAndDelete(e.params.id).then((()=>{n.status(204).end()})).catch((e=>o(e)))})),n.put("/api/persons/:id",((e,n,o)=>{const{name:s,number:r}=e.body;i.findByIdAndUpdate(e.params.id,{name:s,number:r},{new:!0,runValidators:!0,context:"query"}).then((e=>{e?n.json(e):n.status(404).end()})).catch((e=>o(e)))})),n.get("/api/persons/:id",((e,n,o)=>{i.findById(e.params.id).then((e=>{e?n.json(e):n.status(404).end()})).catch((e=>o(e)))})),n.get("/info",((e,n,o)=>{i.find().then((e=>{n.send(`Phonebook has info for ${e.length} people.\n ${Date()}`)})).catch((e=>o(e)))})),n.get("*",((e,n)=>{n.sendFile(r.join(__dirname,"build","index.html"))}));n.use(((e,n,o,s)=>(console.error(e.message),"CastError"===e.name?o.status(400).send({error:"malformatted id"}):"ValidationError"===e.name?o.status(400).json({error:e.message}):void s(e)))),n.listen(d,(()=>{console.log(`Server running on port ${d}`)}))})();
//# sourceMappingURL=main.5d8de2d3.js.map